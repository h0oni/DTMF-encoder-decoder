function varargout = decoder(varargin)
% DECODER MATLAB code for decoder.fig
%      DECODER, by itself, creates a new DECODER or raises the existing
%      singleton*.
%
%      H = DECODER returns the handle to a new DECODER or the handle to
%      the existing singleton*.
%
%      DECODER('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in DECODER.M with the given input arguments.
%
%      DECODER('Property','Value',...) creates a new DECODER or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before decoder_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to decoder_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help decoder

% Last Modified by GUIDE v2.5 12-Sep-2017 04:22:10

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @decoder_OpeningFcn, ...
                   'gui_OutputFcn',  @decoder_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before decoder is made visible.
function decoder_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to decoder (see VARARGIN)

% Choose default command line output for decoder
handles.output = hObject;
handles.m='';

guidata(hObject, handles);

% UIWAIT makes decoder wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = decoder_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;



function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% get(handles.edit1,'string')
str='';
fid=get(handles.edit1,'string');
d=length(fid);
tag=['']
if strcmp()
[y,fs]=audioread(fid);
handles.m=y;
e=round(length(y)/4800);
d=length(y)/e;
for i=0:e-1
y1=y(d*i+1:d*(i+1));
t=[0:0.000125:.3];
fs=8000;
for f1=[697 770 852 941]

for f2=[1209 1336 1477]
x1=.5*sin(2*pi*f1*t);
x2=.5*sin(2*pi*f2*t);
x=x1+x2;
r=xcorr(x,y1);
val=max(r);

if val>500
       if f1==697 && f2==1209
          str=[str,'1'];
       elseif f1==697 && f2==1336
          str=[str,'2'];
       elseif f1==697 && f2==1477
          str=[str,'3'];
       elseif f1==770 && f2==1209  
          str=[str,'4'];
       elseif f1==770 && f2==1336
          str=[str,'5'];
       elseif f1==770 && f2==1477
            str=[str,'6'];
       elseif f1==852 && f2==1209
          str=[str,'7'];
       elseif f1==852 && f2==1336
           str=[str,'8'];
       elseif f1==852 && f2==1477
          str=[str,'9'];
       elseif f1==941 && f2==1209   
          str=[str,'*'];
       elseif f1==941 && f2==1336 
          str=[str,'0'];
       elseif f1==941 && f2==1477
          str=[str,'#'];
    end
end
end
end
end
set(handles.text2,'string',str);

guidata(hObject, handles);


% --- Executes on button press in play.
function play_Callback(hObject, eventdata, handles)
% hObject    handle to play (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if length(handles.m)==0
    msgbox('Decode the file first','error','error');
else
sound(handles.m,8000);
end
guidata(hObject, handles);


% --- Executes on button press in clear.
function clear_Callback(hObject, eventdata, handles)
% hObject    handle to clear (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
handles.m='';
set(handles.text2,'string','');
guidata(hObject, handles);
